250226 Testing functions

Works:


var name = "Timmy";

fun sayHi() {
   print name;
}

sayHi();

Not work: semicolon issue;
function add5(num) {
  return num + 5;
}

var result = add5(6);

print result;


// This owrks after I stop cloning env
var num = 1;
num = 11;

print num;

if (3 == 5) {
  print "first";
  num = 5;
  print "second";
}

if (true) {
  print "inside true";
}

if (false) {
  print "inside false";
}

print num;

/////

This works after I stop cloning ENV

var num = 9;

print "start";

while (num < 10) {
  num = 10;
}

print "num at end";
print num;
print "end";

////

// This does NOT work just when switching the env;
// NOW it works that I put evaluation of assignment into evaluate()
var num = 0;

print "start";

while (num < 10) {
  print num;
  num = num + 1;
}

print "end";
print num;

-----
250305 Testing returns


NOT WORK:

fun add(a, b) {
  return a + b;
}

var result = add(3, 5);

print result;

WORKS:

var fish = "salmon";
print fish;

THIS ALSO WORKS:

fun work() {
  var fish = "salmon";
  print fish;
}

work();

THIS WORKS!

fun add(a, b) {
  return a + b;
}

print add(3, 5);

SO WHY DOES THIS NOT WORK?

Now this works...

fun add(a, b) {
  return a + b;
}

print add(7, 8);

var result = add(3, 5);

print result;

I had to move the setting of the function identifier in the env 
outide the evaluate() call. To add this to lessons learned.
Note: this is similar to what had to happen other times the 
`set` function was called: the setting never happened inside an
evaluate call. It happened outside.


-----

this does not work

fun add(a, b) {
  print a + b;
  return fun divide(a, b) {
    return a / b;
  };
}

print add(10, 5)();


This works

fun whoopie(num) {
  if (num == 0) {
    return "whoopie!";
  }
}

var result = whoopie(0);

print result;
